// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ServicesAccessibilityChecker.Context;

namespace ServicesAccessibilityChecker.Migrations
{
    [DbContext(typeof(ServicesDbContext))]
    partial class ServicesDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079");

            modelBuilder.Entity("ServicesAccessibilityChecker.Models.Catalog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedDate");

                    b.Property<bool>("IsAvailable");

                    b.Property<int>("LastDayErrors");

                    b.Property<int>("LastHourErrors");

                    b.Property<double>("ResponseDuration");

                    b.HasKey("Id");

                    b.ToTable("Catalogs");
                });

            modelBuilder.Entity("ServicesAccessibilityChecker.Models.Ibonus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedDate");

                    b.Property<bool>("IsAvailable");

                    b.Property<int>("LastDayErrors");

                    b.Property<int>("LastHourErrors");

                    b.Property<double>("ResponseDuration");

                    b.HasKey("Id");

                    b.ToTable("Ibonuses");
                });

            modelBuilder.Entity("ServicesAccessibilityChecker.Models.Refdata", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedDate");

                    b.Property<bool>("IsAvailable");

                    b.Property<int>("LastDayErrors");

                    b.Property<int>("LastHourErrors");

                    b.Property<double>("ResponseDuration");

                    b.HasKey("Id");

                    b.ToTable("Refdatas");
                });
#pragma warning restore 612, 618
        }
    }
}
